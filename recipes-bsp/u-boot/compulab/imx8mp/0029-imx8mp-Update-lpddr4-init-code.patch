From 4c946ca3347a3a857f486e6fc8e031e2cc5bcd34 Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Fri, 26 Feb 2021 09:04:11 +0200
Subject: [PATCH] imx8mp: Update lpddr4 init code

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 board/compulab/plat/imx8/eeprom/eeprom_spl.c   |  8 +++
 board/compulab/plat/imx8mp/ddr/Makefile        |  5 --
 board/compulab/plat/imx8mp/ddr/ddr.c           | 58 +++++++++++++---------
 board/compulab/plat/imx8mp/ddr/ddr.h           |  2 -
 board/compulab/plat/imx8mp/ddr/lpddr4_timing.c | 20 ++++----
 board/compulab/plat/imx8mp/spl/spl.c           | 69 ++++++--------------------
 6 files changed, 68 insertions(+), 94 deletions(-)

diff --git a/board/compulab/plat/imx8/eeprom/eeprom_spl.c b/board/compulab/plat/imx8/eeprom/eeprom_spl.c
index ed7bc96cd4..105a51e285 100644
--- a/board/compulab/plat/imx8/eeprom/eeprom_spl.c
+++ b/board/compulab/plat/imx8/eeprom/eeprom_spl.c
@@ -172,4 +172,12 @@ u32 cl_eeprom_set_osize(u32 osize)
 };
 #endif //CONFIG_SPL_REPORT_FAKE_MEMSIZE
 
+int cl_eeprom_buffer_write(uint offset, uchar *buf, int len) {
+	return cl_eeprom_write(offset, buf, len);
+}
+
+int cl_eeprom_buffer_read(uint offset, uchar *buf, int len) {
+	return cl_eeprom_read(offset, buf, len);
+}
+
 #endif
diff --git a/board/compulab/plat/imx8mp/ddr/Makefile b/board/compulab/plat/imx8mp/ddr/Makefile
index c189e63f85..4a4a2b6d59 100644
--- a/board/compulab/plat/imx8mp/ddr/Makefile
+++ b/board/compulab/plat/imx8mp/ddr/Makefile
@@ -1,9 +1,4 @@
 ifdef CONFIG_TARGET_UCM_IMX8M_PLUS
 obj-y += lpddr4_timing.o
-else
 obj-y += ddr.o
-obj-y += lpddr4_timing_ff020008.o
-obj-y += lpddr4_timing_ff000110.o
-obj-y += lpddr4_timing_01061010.o
-obj-y += lpddr4_timing_01050008.o
 endif
diff --git a/board/compulab/plat/imx8mp/ddr/ddr.c b/board/compulab/plat/imx8mp/ddr/ddr.c
index 31307b8257..3fa85329f4 100644
--- a/board/compulab/plat/imx8mp/ddr/ddr.c
+++ b/board/compulab/plat/imx8mp/ddr/ddr.c
@@ -20,9 +20,6 @@ u32 cl_eeprom_set_ddrinfo(u32 ddrinfo);
 u32 cl_eeprom_get_subind(void);
 u32 cl_eeprom_set_subind(u32 subind);
 
-#ifdef CONFIG_SPL_REPORT_FAKE_MEMSIZE
-u32 cl_eeprom_get_osize(void);
-#endif
 static unsigned int lpddr4_mr_read(unsigned int mr_rank, unsigned int mr_addr)
 {
 	unsigned int tmp;
@@ -69,17 +66,19 @@ struct lpddr4_desc {
 
 #define DEFAULT (('D' << 24) + ('E' << 16 ) + ( 'F' << 8 ) + 'A')
 static const struct lpddr4_desc lpddr4_array[] = {
-#ifdef CONFIG_TARGET_MCM_IMX8M_MINI
+#ifdef CONFIG_VALID_TARGET
 	{ .name = "Nanya",	.id = 0x05000010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-#else
 	{ .name = "Nanya",	.id = 0x05000010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_05000010},
-#endif
 	{ .name = "Samsung",	.id = 0x01061010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
 	{ .name = "Samsung",	.id = 0x01050008, .subind = 0xff, .size = 1024, .count = 1, .timing = &ucm_dram_timing_01050008},
 	{ .name = "Kingston",	.id = 0xff000010, .subind = 0x04, .size = 4096, .count = 1, .timing = &ucm_dram_timing_ff000110},
 	{ .name = "Kingston",	.id = 0xff000010, .subind = 0x02, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
 	{ .name = "Micron",	.id = 0xff020008, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_ff020008},
 	{ .name = "Micron",	.id = 0xff000110, .subind = 0xff, .size = 4096, .count = 1, .timing = &ucm_dram_timing_ff000110},
+#else
+	{ .name = "Samsung",	.id = 0xDEADBEEF, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
+	{ .name = "Samsung",	.id = 0x01061010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
+#endif
 };
 
 static unsigned int lpddr4_get_mr(void)
@@ -117,18 +116,19 @@ static void spl_tcm_fini(struct lpddr4_tcm_desc *lpddr4_tcm_desc) {
     lpddr4_tcm_desc->index = 0;
 }
 
-#define SPL_TCM_DATA 0x7e0000
+static struct lpddr4_tcm_desc spl_tcm_data;
+#define SPL_TCM_DATA &spl_tcm_data
 #define SPL_TCM_INIT spl_tcm_init(lpddr4_tcm_desc)
 #define SPL_TCM_FINI spl_tcm_fini(lpddr4_tcm_desc)
 
-void spl_dram_init(void)
+static int _spl_dram_init(void)
 {
 	unsigned int ddr_info = 0xdeadbeef;
 	unsigned int ddr_info_mrr = 0xdeadbeef;
 	unsigned int ddr_found = 0;
 	int i = 0;
 
-	struct lpddr4_tcm_desc *lpddr4_tcm_desc = (struct lpddr4_tcm_desc *) SPL_TCM_DATA;
+	struct lpddr4_tcm_desc *lpddr4_tcm_desc = SPL_TCM_DATA;
 
 	if (lpddr4_tcm_desc->sign != DEFAULT) {
 		/* get ddr type from the eeprom if not in tcm scan mode */
@@ -174,7 +174,7 @@ void spl_dram_init(void)
 	if (ddr_info_mrr == 0xFFFFFFFF ) {
 		printf("DDRINFO(M): mr5-8 [ 0x%x ] is invalid; reset\n", ddr_info_mrr);
 		SPL_TCM_INIT;
-		do_reset(NULL,0,0,NULL);
+		return 1;
 	}
 
 	printf("DDRINFO(M): mr5-8 [ 0x%x ]\n", ddr_info_mrr);
@@ -182,7 +182,7 @@ void spl_dram_init(void)
 
 	if (ddr_info_mrr != ddr_info) {
 		SPL_TCM_INIT;
-		do_reset(NULL,0,0,NULL);
+		return 1;
 	}
 
 	SPL_TCM_FINI;
@@ -201,18 +201,30 @@ void spl_dram_init(void)
 			printf("DDRINFO(EEPROM): i2c dev 1; i2c md 0x51 0x40 0x50\n");
 		}
 	}
-#ifdef CONFIG_SPL_REPORT_FAKE_MEMSIZE
-	/* Pass the dram size to th U-Boot through the tcm memory */
-	{ /* To figure out what to store into the TCM buffer */
-	  /* For debug purpouse only. To override the real memsize */
-		unsigned int ddr_tcm_size = cl_eeprom_get_osize();
-		if ((ddr_tcm_size == 0) || (ddr_tcm_size == -1))
-			ddr_tcm_size = lpddr4_array[i].size;
-
-		lpddr4_tcm_desc->size = ddr_tcm_size;
-	}
-#else
+
 	lpddr4_tcm_desc->size = lpddr4_array[i].size;
-#endif
+	return 0;
+}
+
+int cl_eeprom_buffer_write(uint offset, uchar *buf, int len);
+int cl_eeprom_buffer_read(uint offset, uchar *buf, int len);
+
+static inline void lpddr4_data_get(struct lpddr4_tcm_desc *lpddr4_tcm_desc) {
+	cl_eeprom_buffer_read(0, (uchar *)lpddr4_tcm_desc, sizeof(struct lpddr4_tcm_desc));
+}
+
+static inline void lpddr4_data_set(struct lpddr4_tcm_desc *lpddr4_tcm_desc) {
+	cl_eeprom_buffer_write(0, (uchar *)lpddr4_tcm_desc, sizeof(struct lpddr4_tcm_desc));
+}
+
+void spl_dram_init(void)
+{
+	lpddr4_data_get(SPL_TCM_DATA);
+	if (_spl_dram_init()) {
+		lpddr4_data_set(SPL_TCM_DATA);
+		printf("%s Reset ... \n",__func__);
+		do_reset(NULL,0,0,NULL);
+	}
 
+	printf("%s Continue w/out reset ... \n",__func__);
 }
diff --git a/board/compulab/plat/imx8mp/ddr/ddr.h b/board/compulab/plat/imx8mp/ddr/ddr.h
index 4901e826a8..014f892d12 100644
--- a/board/compulab/plat/imx8mp/ddr/ddr.h
+++ b/board/compulab/plat/imx8mp/ddr/ddr.h
@@ -15,8 +15,6 @@ extern struct dram_timing_info ucm_dram_timing_05000010;
 
 void spl_dram_init(void);
 
-#define TCM_DATA_CFG 0x7e0000
-
 struct lpddr4_tcm_desc {
 	unsigned int size;
 	unsigned int sign;
diff --git a/board/compulab/plat/imx8mp/ddr/lpddr4_timing.c b/board/compulab/plat/imx8mp/ddr/lpddr4_timing.c
index ca1b2b752f..03697c28d7 100644
--- a/board/compulab/plat/imx8mp/ddr/lpddr4_timing.c
+++ b/board/compulab/plat/imx8mp/ddr/lpddr4_timing.c
@@ -14,7 +14,7 @@
 #include <linux/kernel.h>
 #include <asm/arch/ddr.h>
 
-struct dram_cfg_param ddr_ddrc_cfg[] = {
+static struct dram_cfg_param ddr_ddrc_cfg[] = {
 	/** Initialize DDRC registers **/
 	{ 0x3d400304, 0x1 },
 	{ 0x3d400030, 0x1 },
@@ -128,7 +128,7 @@ struct dram_cfg_param ddr_ddrc_cfg[] = {
 };
 
 /* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
+static struct dram_cfg_param ddr_ddrphy_cfg[] = {
 	{ 0x100a0, 0x0 },
 	{ 0x100a1, 0x1 },
 	{ 0x100a2, 0x2 },
@@ -337,7 +337,7 @@ struct dram_cfg_param ddr_ddrphy_cfg[] = {
 };
 
 /* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+static struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
 	{ 0x200b2, 0x0 },
 	{ 0x1200b2, 0x0 },
 	{ 0x2200b2, 0x0 },
@@ -1059,7 +1059,7 @@ struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
 	{ 0x13830, 0x0 },
 };
 /* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
+static struct dram_cfg_param ddr_fsp0_cfg[] = {
 	{ 0xd0000, 0x0 },
 	{ 0x54003, 0xbb8 },
 	{ 0x54004, 0x2 },
@@ -1099,7 +1099,7 @@ struct dram_cfg_param ddr_fsp0_cfg[] = {
 
 
 /* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
+static struct dram_cfg_param ddr_fsp1_cfg[] = {
 	{ 0xd0000, 0x0 },
 	{ 0x54002, 0x101 },
 	{ 0x54003, 0x190 },
@@ -1140,7 +1140,7 @@ struct dram_cfg_param ddr_fsp1_cfg[] = {
 
 
 /* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
+static struct dram_cfg_param ddr_fsp2_cfg[] = {
 	{ 0xd0000, 0x0 },
 	{ 0x54002, 0x102 },
 	{ 0x54003, 0x64 },
@@ -1181,7 +1181,7 @@ struct dram_cfg_param ddr_fsp2_cfg[] = {
 
 
 /* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+static struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
 	{ 0xd0000, 0x0 },
 	{ 0x54003, 0xbb8 },
 	{ 0x54004, 0x2 },
@@ -1222,7 +1222,7 @@ struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
 };
 
 /* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
+static struct dram_cfg_param ddr_phy_pie[] = {
 	{ 0xd0000, 0x0 },
 	{ 0x90000, 0x10 },
 	{ 0x90001, 0x400 },
@@ -1806,7 +1806,7 @@ struct dram_cfg_param ddr_phy_pie[] = {
 	{ 0xd0000, 0x1 }
 };
 
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+static struct dram_fsp_msg ddr_dram_fsp_msg[] = {
 	{
 		/* P0 3000mts 1D */
 		.drate = 3000,
@@ -1838,7 +1838,7 @@ struct dram_fsp_msg ddr_dram_fsp_msg[] = {
 };
 
 /* ddr timing config params */
-struct dram_timing_info dram_timing = {
+struct dram_timing_info ucm_dram_timing_01061010 = {
 	.ddrc_cfg = ddr_ddrc_cfg,
 	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
 	.ddrphy_cfg = ddr_ddrphy_cfg,
diff --git a/board/compulab/plat/imx8mp/spl/spl.c b/board/compulab/plat/imx8mp/spl/spl.c
index d8bceab630..ffbfe27fcb 100644
--- a/board/compulab/plat/imx8mp/spl/spl.c
+++ b/board/compulab/plat/imx8mp/spl/spl.c
@@ -23,7 +23,7 @@
 #include <asm/mach-imx/mxc_i2c.h>
 #include <fsl_esdhc_imx.h>
 #include <mmc.h>
-#include <asm/arch/ddr.h>
+#include "ddr/ddr.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -53,59 +53,6 @@ int spl_board_boot_device(enum boot_device boot_dev_spl)
 #endif
 }
 
-static unsigned int lpddr4_mr_read(unsigned int mr_rank, unsigned int mr_addr)
-{
-	unsigned int tmp;
-	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x1);
-	do {
-		tmp = reg32_read(DDRC_MRSTAT(0));
-	} while (tmp & 0x1);
-
-	reg32_write(DDRC_MRCTRL0(0), (mr_rank << 4) | 0x1);
-	reg32_write(DDRC_MRCTRL1(0), (mr_addr << 8));
-	reg32setbit(DDRC_MRCTRL0(0), 31);
-	do {
-		tmp = reg32_read(DRC_PERF_MON_MRR0_DAT(0));
-	} while ((tmp & 0x8) == 0);
-	tmp = reg32_read(DRC_PERF_MON_MRR1_DAT(0));
-	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x4);
-	while(tmp) { //try to find a significant byte in the word
-		if(tmp & 0xff) {
-			tmp &= 0xff;
-			break;
-		}
-		tmp >>= 8;
-	}
-	return tmp;
-}
-
-static unsigned int lpddr4_get_mr(void)
-{
-	int i = 0, attempts = 5;
-	unsigned int ddr_info = 0;
-	unsigned int regs[] = { 5, 6, 7, 8 };
-
-	do {
-		for ( i = 0 ; i < ARRAY_SIZE(regs) ; i++ ) {
-			unsigned int data = 0;
-			data = lpddr4_mr_read(0xF, regs[i]);
-			ddr_info <<= 8;
-			ddr_info += (data & 0xFF);
-		}
-		if ((ddr_info != 0xFFFFFFFF) && (ddr_info != 0))
-			break; // The attempt was successfull
-	} while ( --attempts );
-	return	ddr_info;
-}
-
-void spl_dram_init(void)
-{
-	unsigned int ddr_info = 0;
-	ddr_init(&dram_timing);
-	ddr_info = lpddr4_get_mr();
-	printf("lpddr4_id [ 0x%x ]\n",ddr_info);
-}
-
 #define I2C_PAD_CTRL (PAD_CTL_DSE6 | PAD_CTL_HYS | PAD_CTL_PUE | PAD_CTL_PE)
 #define PC MUX_PAD_CTRL(I2C_PAD_CTRL)
 struct i2c_pads_info i2c_pad_info1 = {
@@ -121,6 +68,18 @@ struct i2c_pads_info i2c_pad_info1 = {
 	},
 };
 
+struct i2c_pads_info i2c_pad_info2 = {
+	.scl = {
+		.i2c_mode = MX8MP_PAD_I2C2_SCL__I2C2_SCL | PC,
+		.gpio_mode = MX8MP_PAD_I2C2_SCL__GPIO5_IO16 | PC,
+		.gp = IMX_GPIO_NR(5, 16),
+	},
+	.sda = {
+		.i2c_mode = MX8MP_PAD_I2C2_SDA__I2C2_SDA | PC,
+		.gpio_mode = MX8MP_PAD_I2C2_SDA__GPIO5_IO17 | PC,
+		.gp = IMX_GPIO_NR(5, 17),
+	},
+};
 #define USDHC2_CD_GPIO	IMX_GPIO_NR(2, 12)
 #define USDHC2_PWR_GPIO IMX_GPIO_NR(2, 19)
 
@@ -299,6 +258,8 @@ void board_init_f(ulong dummy)
 
 	power_init_board();
 
+	/* Prepare the eeprom i2c for memory detection */
+	setup_i2c(1, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info2);
 	/* DDR initialization */
 	spl_dram_init();
 
-- 
2.11.0

