From 72d601353a5a6fce1bd2e7cc0b9567cb539e3d90 Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Fri, 26 Feb 2021 19:53:41 +0200
Subject: [PATCH] ucm-imx8m-plus: u-boot: Read dram size by memory id
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Add an option to get dram size in U-Boot w/out any shared memory resources.
As of now U-Boot reads the same mr4-8 registers that the SPL does and takes
the size by the memory id from the lppdr4_desc array.

Reasons:
1) TCM memory canâ€™t be used any longer.
2) eeprom is not available at the time when the U-Boot requires the true dram size.

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 board/compulab/plat/imx8mp/board/board.c    | 14 ++++++
 board/compulab/plat/imx8mp/ddr/Makefile     |  5 +-
 board/compulab/plat/imx8mp/ddr/ddr.c        | 78 -----------------------------
 board/compulab/plat/imx8mp/ddr/ddr.h        | 40 +++++++++++++--
 board/compulab/plat/imx8mp/ddr/ddr_common.c | 70 ++++++++++++++++++++++++++
 5 files changed, 123 insertions(+), 84 deletions(-)
 create mode 100644 board/compulab/plat/imx8mp/ddr/ddr_common.c

diff --git a/board/compulab/plat/imx8mp/board/board.c b/board/compulab/plat/imx8mp/board/board.c
index 7b57b0ed9a..dd2cd75f0e 100644
--- a/board/compulab/plat/imx8mp/board/board.c
+++ b/board/compulab/plat/imx8mp/board/board.c
@@ -24,6 +24,7 @@
 #include "common/fdt.h"
 #include <usb.h>
 #include <dwc3-uboot.h>
+#include "ddr/ddr.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -35,6 +36,19 @@ static void setup_gpmi_nand(void)
 }
 #endif
 
+int board_phys_sdram_size(phys_size_t *size)
+{
+	size_t dramsize;
+	if (!size)
+		return -EINVAL;
+
+	dramsize = lppdr4_get_ramsize();
+
+	*size = ((1L << 20) * dramsize );
+
+	return 0;
+}
+
 #ifdef CONFIG_OF_BOARD_SETUP
 int ft_board_setup(void *blob, bd_t *bd)
 {
diff --git a/board/compulab/plat/imx8mp/ddr/Makefile b/board/compulab/plat/imx8mp/ddr/Makefile
index 4a4a2b6d59..7b80348c3d 100644
--- a/board/compulab/plat/imx8mp/ddr/Makefile
+++ b/board/compulab/plat/imx8mp/ddr/Makefile
@@ -1,4 +1,5 @@
 ifdef CONFIG_TARGET_UCM_IMX8M_PLUS
-obj-y += lpddr4_timing.o
-obj-y += ddr.o
+obj-$(CONFIG_SPL_BUILD) += lpddr4_timing.o
+obj-$(CONFIG_SPL_BUILD) += ddr.o
+obj-y += ddr_common.o
 endif
diff --git a/board/compulab/plat/imx8mp/ddr/ddr.c b/board/compulab/plat/imx8mp/ddr/ddr.c
index 3fa85329f4..eb6bc847da 100644
--- a/board/compulab/plat/imx8mp/ddr/ddr.c
+++ b/board/compulab/plat/imx8mp/ddr/ddr.c
@@ -20,85 +20,7 @@ u32 cl_eeprom_set_ddrinfo(u32 ddrinfo);
 u32 cl_eeprom_get_subind(void);
 u32 cl_eeprom_set_subind(u32 subind);
 
-static unsigned int lpddr4_mr_read(unsigned int mr_rank, unsigned int mr_addr)
-{
-	unsigned int tmp;
-	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x1);
-	do {
-		tmp = reg32_read(DDRC_MRSTAT(0));
-	} while (tmp & 0x1);
-
-	reg32_write(DDRC_MRCTRL0(0), (mr_rank << 4) | 0x1);
-	reg32_write(DDRC_MRCTRL1(0), (mr_addr << 8));
-	reg32setbit(DDRC_MRCTRL0(0), 31);
-	do {
-		tmp = reg32_read(DRC_PERF_MON_MRR0_DAT(0));
-	} while ((tmp & 0x8) == 0);
-	tmp = reg32_read(DRC_PERF_MON_MRR1_DAT(0));
-	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x4);
-	while(tmp) { //try to find a significant byte in the word
-		if(tmp & 0xff) {
-			tmp &= 0xff;
-			break;
-		}
-		tmp >>= 8;
-	}
-	return tmp;
-}
-
-struct lpddr4_desc {
-	char name[16];
-	unsigned int id;
-	unsigned int size;
-	unsigned int count;
-	/* an optional field
-	 * use it if default is not the
-	 * 1-st array entry */
-	unsigned int _default;
-	/* An optional field to distiguish DRAM chips that
-	 * have different geometry, though return the same MRR.
-	 * Default value 0xff
-	 */
-	u8	subind;
-	struct dram_timing_info *timing;
-	char *desc[4];
-};
-
 #define DEFAULT (('D' << 24) + ('E' << 16 ) + ( 'F' << 8 ) + 'A')
-static const struct lpddr4_desc lpddr4_array[] = {
-#ifdef CONFIG_VALID_TARGET
-	{ .name = "Nanya",	.id = 0x05000010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-	{ .name = "Nanya",	.id = 0x05000010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_05000010},
-	{ .name = "Samsung",	.id = 0x01061010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-	{ .name = "Samsung",	.id = 0x01050008, .subind = 0xff, .size = 1024, .count = 1, .timing = &ucm_dram_timing_01050008},
-	{ .name = "Kingston",	.id = 0xff000010, .subind = 0x04, .size = 4096, .count = 1, .timing = &ucm_dram_timing_ff000110},
-	{ .name = "Kingston",	.id = 0xff000010, .subind = 0x02, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-	{ .name = "Micron",	.id = 0xff020008, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_ff020008},
-	{ .name = "Micron",	.id = 0xff000110, .subind = 0xff, .size = 4096, .count = 1, .timing = &ucm_dram_timing_ff000110},
-#else
-	{ .name = "Samsung",	.id = 0xDEADBEEF, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-	{ .name = "Samsung",	.id = 0x01061010, .subind = 0xff, .size = 2048, .count = 1, .timing = &ucm_dram_timing_01061010},
-#endif
-};
-
-static unsigned int lpddr4_get_mr(void)
-{
-	int i = 0, attempts = 5;
-	unsigned int ddr_info = 0;
-	unsigned int regs[] = { 5, 6, 7, 8 };
-
-	do {
-		for ( i = 0 ; i < ARRAY_SIZE(regs) ; i++ ) {
-			unsigned int data = 0;
-			data = lpddr4_mr_read(0xF, regs[i]);
-			ddr_info <<= 8;
-			ddr_info += (data & 0xFF);
-		}
-		if ((ddr_info != 0xFFFFFFFF) && (ddr_info != 0))
-			break; // The attempt was successfull
-	} while ( --attempts );
-	return	ddr_info;
-}
 
 static void spl_tcm_init(struct lpddr4_tcm_desc *lpddr4_tcm_desc) {
     if (lpddr4_tcm_desc->sign == DEFAULT)
diff --git a/board/compulab/plat/imx8mp/ddr/ddr.h b/board/compulab/plat/imx8mp/ddr/ddr.h
index 014f892d12..27ee8d387d 100644
--- a/board/compulab/plat/imx8mp/ddr/ddr.h
+++ b/board/compulab/plat/imx8mp/ddr/ddr.h
@@ -7,11 +7,9 @@
 #ifndef __DDR_H__
 #define __DDR_H__
 
-extern struct dram_timing_info ucm_dram_timing_ff020008;
-extern struct dram_timing_info ucm_dram_timing_ff000110;
+#ifdef CONFIG_SPL_BUILD
 extern struct dram_timing_info ucm_dram_timing_01061010;
-extern struct dram_timing_info ucm_dram_timing_01050008;
-extern struct dram_timing_info ucm_dram_timing_05000010;
+#endif
 
 void spl_dram_init(void);
 
@@ -22,4 +20,38 @@ struct lpddr4_tcm_desc {
 	unsigned int count;
 };
 
+struct lpddr4_desc {
+	char name[16];
+	unsigned int id;
+	unsigned int size;
+	unsigned int count;
+	/* an optional field
+	 * use it if default is not the
+	 * 1-st array entry */
+	unsigned int _default;
+	/* An optional field to distiguish DRAM chips that
+	 * have different geometry, though return the same MRR.
+	 * Default value 0xff
+	 */
+	u8	subind;
+	struct dram_timing_info *timing;
+	char *desc[4];
+};
+
+static const struct lpddr4_desc lpddr4_array[] = {
+	{ .name = "Samsung",	.id = 0xDEADBEEF, .subind = 0xff, .size = 2048, .count = 1,
+#ifdef CONFIG_SPL_BUILD
+		.timing = &ucm_dram_timing_01061010
+#endif
+	},
+	{ .name = "Samsung",	.id = 0x01061010, .subind = 0xff, .size = 2048, .count = 1,
+#ifdef CONFIG_SPL_BUILD
+		.timing = &ucm_dram_timing_01061010
+#endif
+	},
+};
+
+unsigned int lpddr4_get_mr(void);
+const struct lpddr4_desc *lpddr4_get_desc_by_id(unsigned int id);
+size_t lppdr4_get_ramsize(void);
 #endif
diff --git a/board/compulab/plat/imx8mp/ddr/ddr_common.c b/board/compulab/plat/imx8mp/ddr/ddr_common.c
new file mode 100644
index 0000000000..520ccd3ee4
--- /dev/null
+++ b/board/compulab/plat/imx8mp/ddr/ddr_common.c
@@ -0,0 +1,70 @@
+#include <common.h>
+#include <spl.h>
+#include <asm/io.h>
+#include <errno.h>
+#include <asm/io.h>
+#include <asm/arch/ddr.h>
+#include "ddr.h"
+
+static unsigned int lpddr4_mr_read(unsigned int mr_rank, unsigned int mr_addr)
+{
+	unsigned int tmp;
+	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x1);
+	do {
+		tmp = reg32_read(DDRC_MRSTAT(0));
+	} while (tmp & 0x1);
+
+	reg32_write(DDRC_MRCTRL0(0), (mr_rank << 4) | 0x1);
+	reg32_write(DDRC_MRCTRL1(0), (mr_addr << 8));
+	reg32setbit(DDRC_MRCTRL0(0), 31);
+	do {
+		tmp = reg32_read(DRC_PERF_MON_MRR0_DAT(0));
+	} while ((tmp & 0x8) == 0);
+	tmp = reg32_read(DRC_PERF_MON_MRR1_DAT(0));
+	reg32_write(DRC_PERF_MON_MRR0_DAT(0), 0x4);
+	while(tmp) { //try to find a significant byte in the word
+		if(tmp & 0xff) {
+			tmp &= 0xff;
+			break;
+		}
+		tmp >>= 8;
+	}
+	return tmp;
+}
+
+unsigned int lpddr4_get_mr(void)
+{
+	int i = 0, attempts = 5;
+	unsigned int ddr_info = 0;
+	unsigned int regs[] = { 5, 6, 7, 8 };
+
+	do {
+		for ( i = 0 ; i < ARRAY_SIZE(regs) ; i++ ) {
+			unsigned int data = 0;
+			data = lpddr4_mr_read(0xF, regs[i]);
+			ddr_info <<= 8;
+			ddr_info += (data & 0xFF);
+		}
+		if ((ddr_info != 0xFFFFFFFF) && (ddr_info != 0))
+			break; // The attempt was successfull
+	} while ( --attempts );
+	return	ddr_info;
+}
+
+const struct lpddr4_desc *lpddr4_get_desc_by_id(unsigned int id) {
+	int i = 0;
+	for ( i = 0; i < ARRAY_SIZE(lpddr4_array); i++ ) {
+		if (lpddr4_array[i].id == id)
+			return &lpddr4_array[i];
+	}
+	return NULL;
+}
+
+size_t lppdr4_get_ramsize() {
+	size_t ramsize = 0;
+	unsigned int id = lpddr4_get_mr();
+	const struct lpddr4_desc *desc = lpddr4_get_desc_by_id(id);
+	if (desc)
+		ramsize = desc->size;
+	return ramsize;
+}
-- 
2.11.0

